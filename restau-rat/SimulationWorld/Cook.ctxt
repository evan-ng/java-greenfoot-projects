#BlueJ class context
comment0.target=Cook
comment0.text=\r\n\ Cook\ will\ make\ food\ at\ given\ intervals.\ If\ there\ is\ not\ customer\ to\r\n\ give\ the\ food\ to,\ Cook\ will\ wait\ until\ there\ is.\ Cook\ will\ display\ the\r\n\ progress\ of\ the\ "cooking".\ Images\ from\ https\://iconscout.com.\r\n\ \r\n\ @author\ Amy\ Cheung\r\n\ @author\ Evan\ Ng\r\n\ @version\ 5\ (14/05/2020)\r\n
comment1.params=
comment1.target=Cook()
comment1.text=\r\n\ Main\ constructor\ -\ Sets\ all\ the\ variables\ for\ cook\ and\ sets\ cookSpeed\r\n\ to\ a\ default\ value.\r\n
comment10.params=leaving
comment10.target=void\ setLeaving(boolean)
comment10.text=\r\n\ Sets\ whether\ or\ not\ Cook\ is\ leaving\ the\ restaurant\r\n\ \r\n\ @param\ leaving\ \ \ \ \ Whether\ or\ not\ Cook\ is\ leaving\ the\ restaurant\ (true\ is\ leaving)\r\n
comment2.params=cookSpeed
comment2.target=Cook(int)
comment2.text=\r\n\ Constructor\ that\ takes\ on\ int\ -\ will\ change\ cookSpeed.\r\n\ \r\n\ @param\ cookSpeed\ \ \ \ \ How\ fast\ the\ cook\ can\ make\ food.\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ Cook\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=void\ cook()
comment5.params=
comment5.target=void\ determineClient()
comment6.params=
comment6.target=void\ feedClient()
comment7.params=
comment7.target=void\ enter()
comment8.params=
comment8.target=void\ leave()
comment9.params=readyToCook
comment9.target=void\ setReadyToCook(boolean)
comment9.text=\r\n\ Sets\ whether\ or\ not\ Cook\ is\ ready\ to\ make\ food\ or\ not.\r\n\ Cook\ is\ not\ ready\ if\ Cook\ is\ leaving\ or\ entering\ the\ restaurant.\r\n\ \r\n\ @param\ readyToCook\ \ \ \ \ Whether\ or\ not\ Cook\ is\ ready\ to\ cook\ (true\ is\ ready\ to\ cook)\r\n
numComments=11
